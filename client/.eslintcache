[{"/home/ihtisham/PycharmProjects/test/client/src/index.js":"1","/home/ihtisham/PycharmProjects/test/client/src/App.js":"2","/home/ihtisham/PycharmProjects/test/client/src/store.js":"3","/home/ihtisham/PycharmProjects/test/client/src/utils/setAuthToken.js":"4","/home/ihtisham/PycharmProjects/test/client/src/actions/auth.js":"5","/home/ihtisham/PycharmProjects/test/client/src/components/routering/PrivateRoute.js":"6","/home/ihtisham/PycharmProjects/test/client/src/components/Login.jsx":"7","/home/ihtisham/PycharmProjects/test/client/src/components/Body.jsx":"8","/home/ihtisham/PycharmProjects/test/client/src/components/Register.jsx":"9","/home/ihtisham/PycharmProjects/test/client/src/actions/types.js":"10","/home/ihtisham/PycharmProjects/test/client/src/utils/proxy.js":"11","/home/ihtisham/PycharmProjects/test/client/src/actions/alert.js":"12","/home/ihtisham/PycharmProjects/test/client/src/components/routering/Alert.js":"13","/home/ihtisham/PycharmProjects/test/client/src/actions/user.js":"14","/home/ihtisham/PycharmProjects/test/client/src/actions/task.js":"15","/home/ihtisham/PycharmProjects/test/client/src/components/List.jsx":"16","/home/ihtisham/PycharmProjects/test/client/src/reducers/index.js":"17","/home/ihtisham/PycharmProjects/test/client/src/components/AddReminderModel.jsx":"18","/home/ihtisham/PycharmProjects/test/client/src/components/Addlistmodel.jsx":"19","/home/ihtisham/PycharmProjects/test/client/src/reducers/alert.js":"20","/home/ihtisham/PycharmProjects/test/client/src/reducers/auth.js":"21","/home/ihtisham/PycharmProjects/test/client/src/reducers/user.js":"22","/home/ihtisham/PycharmProjects/test/client/src/reducers/task.js":"23","/home/ihtisham/PycharmProjects/test/client/src/utils/dateFunction.js":"24","/home/ihtisham/PycharmProjects/test/client/src/components/DisplayTasks.jsx":"25","/home/ihtisham/PycharmProjects/test/client/src/components/Tasks.jsx":"26","/home/ihtisham/PycharmProjects/test/client/src/components/CheckBox.jsx":"27","/home/ihtisham/PycharmProjects/test/client/src/components/header.jsx":"28","/home/ihtisham/PycharmProjects/test/client/src/components/SearchResult.jsx":"29","/home/ihtisham/PycharmProjects/test/client/src/components/SearchItem.jsx":"30","/home/ihtisham/PycharmProjects/test/client/src/components/TodayTask.jsx":"31","/home/ihtisham/PycharmProjects/test/client/src/components/ScheduledTask.jsx":"32","/home/ihtisham/PycharmProjects/test/client/src/components/EditTask.jsx":"33"},{"size":168,"mtime":1610377164718,"results":"34","hashOfConfig":"35"},{"size":1767,"mtime":1611651056497,"results":"36","hashOfConfig":"35"},{"size":987,"mtime":1611658017901,"results":"37","hashOfConfig":"35"},{"size":242,"mtime":1610377148330,"results":"38","hashOfConfig":"35"},{"size":1347,"mtime":1611572713465,"results":"39","hashOfConfig":"35"},{"size":571,"mtime":1610977098573,"results":"40","hashOfConfig":"35"},{"size":4325,"mtime":1611669126076,"results":"41","hashOfConfig":"35"},{"size":9867,"mtime":1611737441465,"results":"42","hashOfConfig":"35"},{"size":4064,"mtime":1610985536751,"results":"43","hashOfConfig":"35"},{"size":409,"mtime":1610377148290,"results":"44","hashOfConfig":"35"},{"size":117,"mtime":1611667680483,"results":"45","hashOfConfig":"35"},{"size":338,"mtime":1611671314382,"results":"46","hashOfConfig":"35"},{"size":831,"mtime":1611736014071,"results":"47","hashOfConfig":"35"},{"size":2243,"mtime":1611667629502,"results":"48","hashOfConfig":"35"},{"size":7530,"mtime":1611670690223,"results":"49","hashOfConfig":"35"},{"size":2234,"mtime":1611734734309,"results":"50","hashOfConfig":"35"},{"size":232,"mtime":1610377148302,"results":"51","hashOfConfig":"35"},{"size":7927,"mtime":1611735913412,"results":"52","hashOfConfig":"35"},{"size":3587,"mtime":1611656050034,"results":"53","hashOfConfig":"35"},{"size":418,"mtime":1611572598488,"results":"54","hashOfConfig":"35"},{"size":879,"mtime":1610461255257,"results":"55","hashOfConfig":"35"},{"size":1042,"mtime":1611316680440,"results":"56","hashOfConfig":"35"},{"size":3912,"mtime":1611664247861,"results":"57","hashOfConfig":"35"},{"size":83,"mtime":1610377164746,"results":"58","hashOfConfig":"35"},{"size":8317,"mtime":1611737466550,"results":"59","hashOfConfig":"35"},{"size":3750,"mtime":1611743726667,"results":"60","hashOfConfig":"35"},{"size":1380,"mtime":1611131408404,"results":"61","hashOfConfig":"35"},{"size":3049,"mtime":1611573553250,"results":"62","hashOfConfig":"35"},{"size":1977,"mtime":1611676879866,"results":"63","hashOfConfig":"35"},{"size":3202,"mtime":1611676710640,"results":"64","hashOfConfig":"35"},{"size":4892,"mtime":1611737544665,"results":"65","hashOfConfig":"35"},{"size":3979,"mtime":1611737518136,"results":"66","hashOfConfig":"35"},{"size":7161,"mtime":1611743643691,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rxg20v",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ihtisham/PycharmProjects/test/client/src/index.js",[],["146","147"],"/home/ihtisham/PycharmProjects/test/client/src/App.js",[],"/home/ihtisham/PycharmProjects/test/client/src/store.js",[],"/home/ihtisham/PycharmProjects/test/client/src/utils/setAuthToken.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/auth.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/routering/PrivateRoute.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Login.jsx",["148"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport styled from \"styled-components\";\nimport Alert from \"./routering/Alert\";\nimport { Redirect } from \"react-router\";\nimport login_img from \"./assets/undraw_secure_login_pdn4.png\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AlertM from \"./routering/Alert\";\n\nconst Loading = styled.div`\n  @keyframes lds-dual-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  &::after {\n    content: \" \";\n    display: block;\n    width: 20vh;\n    height: 20vh;\n    margin: 35vh auto;\n    border-radius: 50%;\n    border: 6px solid whitesmoke;\n    border-color: whitesmoke transparent whitesmoke transparent;\n    animation: lds-dual-ring 1.2s linear infinite;\n  }\n  display: flex;\n  margin: auto;\n`;\n\nconst LoginForm = styled.form`\n  @media (max-width: 450px) {\n    width: auto;\n    margin: 9vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 56vh;\n  height: 77vh;\n  background: #ffffff;\n  margin: 9vh auto;\n  border-radius: 1vh;\n  padding: 2.5vh;\n`;\n\nconst LoginImg = styled.img`\n  @media (max-width: 450px) {\n    height: 30vh;\n  }\n  @media (max-width: 250px) {\n    height: 15vh;\n  }\n  align-self: center;\n  margin: 0.5vh;\n  height: 40vh;\n`;\nconst TextBox = styled.input`\n  align-self: center;\n  background-color: #ffffff;\n  border-radius: 0.5vh;\n  border: solid 1px #322f3d;\n  padding: 1.1vh 1.3vh;\n  margin: 0.8vh 0;\n  width: 80%;\n  height: 1.5vh;\n  font-size: 2vh;\n`;\nconst ColorButton = withStyles((theme) => ({\n  root: {\n    color: \"#ffffff\",\n    backgroundColor: \"#322f3d\",\n    margin: \"1vh\",\n    width: \"23vh\",\n    height: \"4.5vh\",\n    alignSelf: \"center\",\n    fontSize: \"1.7vh\",\n    \"&:hover\": {\n      backgroundColor: \"#6f6b7c\",\n    },\n  },\n}))(Button);\n\nconst Title = styled.h2`\n  font-size: 3vh;\n  margin: 2vh 1vh;\n  text-align: center;\n  line-height: 0.8;\n  color: #322f3d;\n`;\n\nconst BtnContainer = styled.div`\n  @media (max-width: 450px) {\n    flex-direction: column;\n    margin: 1vh;\n  }\n  display: flex;\n  justify-content: center;\n  margin-top: 1vh;\n`;\n\n//**************************\n//Styles\n//**************************\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    const { email, password } = this.state;\n    e.preventDefault();\n    this.props.login(email, password);\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return <Redirect to={`/todolist`} />;\n    } else\n      return (\n        <>\n          {!this.props.loading ? (\n            <LoginForm onSubmit={(e) => this.onSubmit(e)}>\n              <Title>Login</Title>\n              <LoginImg alt=\"loginimg.png\" src={login_img} />\n              <TextBox\n                type=\"email\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={(e) => this.onChange(e)}\n                required\n              />\n              <TextBox\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                minLength=\"4\"\n                value={this.state.password}\n                onChange={(e) => this.onChange(e)}\n                required\n              />\n              <BtnContainer>\n                <ColorButton type=\"submit\">Login</ColorButton>\n                <ColorButton onClick={(e) => this.routeChange(`/register`)}>\n                  Register\n                </ColorButton>\n              </BtnContainer>\n\n              <AlertM />\n            </LoginForm>\n          ) : (\n            <Loading />\n          )}\n        </>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.user.loading,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","/home/ihtisham/PycharmProjects/test/client/src/components/Body.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Register.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/types.js",[],"/home/ihtisham/PycharmProjects/test/client/src/utils/proxy.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/alert.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/routering/Alert.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/user.js",["149","150"],"import axios from \"axios\";\nimport { CREATED_USER, FAILED_USER } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport { login } from \"./auth\";\nimport { url } from \"../utils/proxy\";\n\n//**********************************\n//***********createUser\n//**********************************\nexport const createUser = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(url + \"/api/user/add\", body, config);\n    dispatch({\n      type: CREATED_USER,\n    });\n    dispatch(setAlert(\"User Created\", \"success\"));\n    dispatch(login(email, password));\n  } catch (error) {\n    dispatch({\n      type: FAILED_USER,\n    });\n    dispatch(setAlert(\"Failed To Create User\", \"error\"));\n  }\n};\n\n//**********************************\n//***********updateUser\n//**********************************\n\nexport const updateUser = (id, token, name, email, password, image) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ name, email, password, image });\n\n  try {\n    const res = await axios.patch(url + \"/api/user/\" + id, body, config);\n    dispatch(setAlert(\"User Updated\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Updated\", \"error\"));\n  }\n};\n\n//**********************************\n//***********editClick\n//**********************************\nexport const editClick = (edit) => async (dispatch) => {\n  if (edit === true) {\n    dispatch({\n      type: \"EDIT_OFF\",\n    });\n  } else {\n    dispatch({\n      type: \"EDIT_ON\",\n    });\n  }\n};\n//**********************************\n//***********editClickDot\n//**********************************\nexport const editClickDot = (edit) => async (dispatch) => {\n  if (edit === true) {\n    dispatch({\n      type: \"EDITLIST_OFF\",\n    });\n  } else {\n    dispatch({\n      type: \"EDITLIST_ON\",\n    });\n  }\n};\n//**********************************\n//***********editClickDot\n//**********************************\nexport const setcheckData = () => async (dispatch) => {\n  dispatch({\n    type: \"CHECKDATA\",\n  });\n};\n","/home/ihtisham/PycharmProjects/test/client/src/actions/task.js",["151","152","153","154","155","156"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { url } from \"../utils/proxy\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\n//**********************************\n//***********addList\n//**********************************\nexport const addList = (token, listName) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ listName });\n  try {\n    const res = await axios.post(url + \"/api/task/add_list\", body, config);\n\n    dispatch({\n      type: \"ADD_LIST\",\n      payload: res.data,\n    });\n    dispatch(setAlert(\"List added\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Add List\", \"error\"));\n  }\n};\n//**********************************\n//***********deleteList\n//**********************************\nexport const deleteList = (token, listID) => async (dispatch) => {\n  dispatch({\n    type: \"REMOVE_LIST\",\n    payload: listID,\n  });\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  try {\n    const res = await axios.delete(\n      url + \"/api/task/delete_list/\" + listID,\n      config\n    );\n    dispatch(setAlert(\"List deleted\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To delete List\", \"error\"));\n  }\n};\n//**********************************\n//***********getData\n//**********************************\nexport const getData = (token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  try {\n    const res = await axios.get(url + \"/api/task/get_lists\", config);\n\n    dispatch({\n      type: \"GET_All_TASKS\",\n      payload: res.data,\n    });\n    dispatch(getNumbers(res.data));\n  } catch (e) {\n    dispatch(setAlert(\"Failed To Get data\", \"error\"));\n  }\n};\n\n//**********************************\n//***********addTask\n//**********************************\nexport const addTask = (\n  token,\n  listId,\n  date,\n  title,\n  description,\n  checkedId = null,\n  listData = null,\n  status = \"false\"\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ listId, date, title, description, status });\n\n  try {\n    const res = await axios.post(url + \"/api/task/\", body, config);\n\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: { listId, data: res.data },\n    });\n\n    if (checkedId === listId) {\n      dispatch({\n        type: \"UPDATE_CLICKEDTASKLIST\",\n        payload: res.data,\n      });\n    }\n        dispatch(setAlert(\"Task added\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Add Task\", \"error\"));\n  }\n};\n\n//**********************************\n//***********deleteTask\n//**********************************\nexport const deleteTask = (token, listId, taskId) => async (dispatch) => {\n  dispatch({\n    type: \"REMOVE_TASK\",\n    payload: {\n      listId,\n      taskId,\n    },\n  });\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  try {\n    const res = await axios.delete(\n      url + \"/api/task/\" + listId + \"/\" + taskId,\n      config\n    );\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Delete Task\", \"error\"));\n  }\n};\n\n//**********************************\n//***********handleClicked\n//**********************************\nexport const handleClicked = (ListId, ListData) => async (dispatch) => {\n  dispatch({\n    type: \"CLICKED\",\n    payload: ListId,\n  });\n  var data;\n  ListData.map((list) => {\n    if (list._id === ListId) {\n      data = {\n        label: list.listName,\n        displayTask: list.taskList,\n      };\n    }\n  });\n  dispatch({\n    type: \"LOAD_CLICKED_LIST_TASK\",\n    payload: data,\n  });\n};\n//**********************************\n//***********loadTaskList\n//**********************************\nexport const loadTaskList = (ListId, ListData) => async (dispatch) => {\n  var data;\n  ListData.map((list) => {\n    if (list._id === ListId) {\n      data = {\n        label: list.listName,\n        displayTask: list.taskList,\n      };\n    }\n  });\n  dispatch({\n    type: \"LOAD_CLICKED_LIST_TASK\",\n    payload: data,\n  });\n};\n\n//**********************************\n//***********getNumbers\n//**********************************\nexport const getNumbers = (taskList) => async (dispatch) => {\n  var sd = 0;\n  var selectedDateNTime = getCurrentDate();\n  // Scheduled\n  taskList.map((l) => {\n    return l.taskList.map((t) => {\n      const dts = new Date(t.date);\n      if (selectedDateNTime.getFullYear() <= dts.getFullYear()) {\n        if (selectedDateNTime.getMonth() <= dts.getMonth()) {\n          if (selectedDateNTime.getDate() < dts.getDate()) {\n            sd = sd + 1;\n          }\n        }\n      }\n    });\n  });\n  var td = 0;\n  //today\n  taskList.map((l) => {\n    return l.taskList.map((t) => {\n      const dts = new Date(t.date);\n      if (\n        selectedDateNTime.getDate() === dts.getDate() &&\n        selectedDateNTime.getMonth() === dts.getMonth() &&\n        selectedDateNTime.getFullYear() === dts.getFullYear()\n      ) {\n        td = td + 1;\n      }\n    });\n  });\n\n  const payload = {\n    td,\n    sd,\n  };\n  dispatch({\n    type: \"SET_NUMBERS\",\n    payload,\n  });\n};\n//**********************************\n//***********handleClicked\n//**********************************\nexport const handleUnClicked = () => async (dispatch) => {\n  dispatch({\n    type: \"UNCLICKED\",\n  });\n};\n\n//**********************************\n//***********statusChange\n//**********************************\nexport const statusChange = (token, listId, taskId) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  try {\n    const res = await axios.patch(\n      url + \"/api/task/status/\" + listId + \"/\" + taskId,\n      config\n    );\n    dispatch({\n      type: \"STATUS_CHANGE\",\n      payload: {\n        listId,\n        data: res.data,\n      },\n    });\n  } catch (error) {\n    dispatch(setAlert(\"Failed To update Task\", \"error\"));\n  }\n};\n//**********************************\n//***********clickedTask\n//**********************************\nexport const clickedTask = (data) => async (dispatch) => {\n  dispatch({\n    type: \"CLICKED_TASK\",\n    payload: data,\n  });\n};\n//**********************************\n//***********unClickedTask\n//**********************************\nexport const unClickedTask = () => async (dispatch) => {\n  dispatch({\n    type: \"UNCLICKED_TASK\",\n  });\n};\n\n//**********************************\n//***********unClickedTask\n//**********************************\nexport const updateTask = (\n  token,\n  listId,\n  taskId,\n  date,\n  title,\n  description,\n  status\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  const body = JSON.stringify({ date, title, description, status });\n  try {\n    const res = await axios.patch(\n      url + \"/api/task/update_list/\" + listId + \"/\" + taskId,\n      body,\n      config\n    );\n\n    if (res.data[0].listName) {\n      dispatch({\n        type: \"GET_All_TASKS\",\n        payload: res.data,\n      });\n      dispatch(getNumbers(res.data));\n\n    } else {\n      dispatch({\n        type: \"UPDATE_TASK\",\n        payload: {\n          listId,\n          data: res.data,\n        },\n      });\n    }\n  } catch (error) {\n    dispatch(setAlert(\"Failed To update Task\", \"error\"));\n  }\n};\n","/home/ihtisham/PycharmProjects/test/client/src/components/List.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/reducers/index.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/AddReminderModel.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Addlistmodel.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/reducers/alert.js",["157"],"import { REMOVE_ALERT, SET_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n\n    case \"CLEAR_ALERTS\":\n      return [];\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/auth.js",["158"],"import {\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  USER_LOADED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: '',\n  user: '',\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        usertype: payload.usertype,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n      };\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/user.js",["159","160"],"import { AUTH_ERROR, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\n\nconst initialState = {\n  loading: false,\n  editList: false,\n  editTask: false,\n  checkData: false,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //action has the coming data init\n  switch (type) {\n    case \"EDIT_ON\":\n      return {\n        ...state,\n        editList: true,\n      };\n    case \"EDIT_OFF\":\n      return {\n        ...state,\n        editList: false,\n      };\n    case \"EDITLIST_ON\":\n      return {\n        ...state,\n        editTask: true,\n      };\n    case \"EDITLIST_OFF\":\n      return {\n        ...state,\n        editTask: false,\n      };\n    case \"CHECKDATA\":\n      return {\n        ...state,\n        checkData: true,\n      };\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      return {\n        ...state,\n        loading: false,\n        checkData: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/task.js",["161"],"const initialState = {\n  taskList: \"\",\n  today: 0,\n  scheduled: 0,\n  clickedTaskList: \"\",\n  clickedListId: \"\",\n  clickedTask: \"\",\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //action has the coming data init\n  switch (type) {\n    case \"CLICKED_TASK\":\n      return {\n        ...state,\n        clickedTask: payload,\n      };\n    case \"UNCLICKED_TASK\":\n      return {\n        ...state,\n        clickedTask: \"\",\n      };\n    case \"UPDATE_TASK\":\n    case \"STATUS_CHANGE\":\n      const statusChangedTasklist = state.taskList.map((list) => {\n        if (list._id === payload.listId) {\n          const newList = {\n            _id: list._id,\n            user: list.user,\n            listName: list.listName,\n            taskList: payload.data,\n          };\n          return newList;\n        }\n        return list;\n      });\n      const newTaskStatusChanged = {\n        label: state.clickedTaskList.label,\n        displayTask: payload.data,\n      };\n      return {\n        ...state,\n        taskList: statusChangedTasklist,\n        clickedTaskList: newTaskStatusChanged,\n      };\n    case \"UPDATE_CLICKEDTASKLIST\":\n      const newCheckList = {\n        label: state.clickedTaskList.label,\n        displayTask: payload,\n      };\n      return {\n        ...state,\n        clickedTaskList: newCheckList,\n      };\n    case \"ADD_TASK\":\n      const newData = state.taskList.map((list) => {\n        if (list._id === payload.listId) {\n          const newList = {\n            _id: list._id,\n            user: list.user,\n            listName: list.listName,\n            taskList: payload.data,\n          };\n          return newList;\n        }\n        return list;\n      });\n      return {\n        ...state,\n        taskList: newData,\n      };\n\n    case \"REMOVE_TASK\":\n      const removedTaskList = state.taskList.map((list) => {\n        if (list._id === payload.listId) {\n          const updatedTasklist = list.taskList.filter(\n            (task) => task._id !== payload.taskId\n          );\n          const tempList = {\n            _id: list._id,\n            user: list.user,\n            listName: list.listName,\n            taskList: updatedTasklist,\n          };\n          return tempList;\n        }\n        return list;\n      });\n\n      if (state.clickedListId === payload.listId) {\n        const updateclickedList = removedTaskList.filter(\n          (list) => list._id === payload.listId\n        );\n        const changeCheckList = {\n          label: updateclickedList[0].listName,\n          displayTask: updateclickedList[0].taskList,\n        };\n        return {\n          ...state,\n          clickedTaskList: changeCheckList,\n          taskList: removedTaskList,\n        };\n      } else\n        return {\n          ...state,\n          taskList: removedTaskList,\n        };\n    case \"LOAD_CLICKED_LIST_TASK\":\n      return {\n        ...state,\n        clickedTaskList: payload,\n      };\n    case \"CLICKED\":\n      return {\n        ...state,\n        clickedListId: payload,\n      };\n    case \"UNCLICKED\":\n      return {\n        ...state,\n        clickedListId: \"\",\n      };\n    case \"SET_NUMBERS\":\n      return {\n        ...state,\n        today: payload.td,\n        scheduled: payload.sd,\n      };\n    case \"GET_All_TASKS\":\n      const newDataTaskList = payload.slice();\n      return {\n        ...state,\n        taskList: newDataTaskList,\n      };\n    case \"CLEAR_TASK\":\n      return {\n        ...state,\n        taskList: null,\n      };\n    //ADD to redux LIST\n    case \"ADD_LIST\":\n      let newTaskList = state.taskList.concat(payload);\n      return {\n        ...state,\n        taskList: newTaskList,\n      };\n\n    //Remove from redux list\n    case \"REMOVE_LIST\":\n      let deletedTaskList = state.taskList.filter(\n        (list) => list._id !== payload\n      );\n      return {\n        ...state,\n        taskList: deletedTaskList,\n      };\n\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/utils/dateFunction.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/DisplayTasks.jsx",["162","163"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { FaLessThan } from \"react-icons/fa\";\nimport { HiOutlineDotsCircleHorizontal } from \"react-icons/hi\";\nimport { v4 as uuid } from \"uuid\";\nimport Tasks from \"./Tasks\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { editClickDot } from \"../actions/user\";\nimport Header from \"./header\";\nimport {\n  loadTaskList,\n  getData,\n  deleteList,\n  handleUnClicked,\n} from \"../actions/task\";\n\nconst ButtonDot = withStyles((theme) => ({\n  root: {\n    minWidth: \"0\",\n    padding: \"0\",\n    marginRight: \"0.5vh\",\n    lineHeight: \"0\",\n  },\n}))(Button);\n\nconst StyledMenuDot = withStyles({\n  paper: {\n    backgroundColor: \"#1f1f1f\",\n    borderRadius: \"1vh\",\n    marginLeft: \"3vh\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"left\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"right\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItemDot = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: \"#3c3c3c\",\n    },\n    \"& .MuiSvgIcon-fontSizeSmall\": {\n      color: \"#e5e5e5\",\n      margin: \"0.2vh 0 0.2vh auto \",\n      fontSize: \"1.8vh\",\n    },\n    \"& .MuiListItemText-primary\": {\n      color: \"#e5e5e5\",\n      margin: \"0.2vh 0 0.2vh 0 \",\n      fontSize: \"1.6vh\",\n    },\n    \"&:last-child\": {\n      borderBottom: \"none\",\n    },\n    padding: \"0.2vh 1.2vh 0.2vh 1.2vh\",\n    borderBottom: \"0.5px solid grey\",\n    margin: \"0\",\n    minHeight: \"0\",\n    letterSpacing: \"0\",\n  },\n}))(MenuItem);\n\nconst BodyStyle = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 2vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 77vh;\n  background: #111;\n  margin: 5vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\nconst MenuBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst ContainBtn = styled.div`\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n  margin-bottom: 1vh;\n`;\nconst AddRem = styled.div`\n  border: none;\n  background-color: transparent;\n  color: #2d62f3;\n  font-size: 1.5vh;\n  margin-left: 0.5vh;\n`;\nconst RemIcon = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 2vh;\n  border-radius: 4vh;\n  margin: 0;\n  color: #2d62f3;\n`;\n\nconst AddandREM = styled.div`\n  &:hover {\n    opacity: 0.7;\n  }\n  cursor: pointer;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n`;\nconst BackTitleContain = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\nconst ContainBackList = styled.div`\n  display: flex;\n  cursor: pointer;\n  margin: auto auto 0 0.5vh;\n  align-items: center;\n`;\nconst BackBTN = styled.div`\n  color: #4271f1;\n  margin-top: 0.4vh;\n  margin-right: 0.8vh;\n  font-size: 2vh;\n`;\nconst ListTitle = styled.h3`\n  color: #2d62f3;\n  font-size: 2.2vh;\n`;\nconst ListName = styled.h1`\n  margin: 0 0 0 1.5vh;\n  color: #2d62f3;\n  font-size: 4.5vh;\n`;\nconst TaskList = styled.div`\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  display: flex;\n  flex-direction: column;\n  margin: 2vh 0 0 0.2vh;\n  padding: 0.3vh;\n  overflow: scroll;\n  scrollbar-width: none;\n`;\n\nconst Dropbtn = styled.div`\n  color: #2d62f3;\n  font-size: 2.8vh;\n  font-weight: normal;\n`;\n\n//**************************\n//Styles\n//**************************\n\nexport class DisplayTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchor: null,\n      taskHere: this.props.task.displayTask,\n    };\n  }\n\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n  editClicked() {\n    this.props.editClickDot(this.props.edit);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <BodyStyle>\n          <BackTitleContain>\n            <ContainBackList\n              onClick={() => {\n                this.routeChange(`/todolist`);\n                if (this.props.edit) this.props.editClickDot(this.props.edit);\n                this.props.handleUnClicked();\n              }}\n            >\n              <BackBTN>\n                <FaLessThan />\n              </BackBTN>\n              <ListTitle>Lists</ListTitle>\n            </ContainBackList>\n\n            <MenuBox>\n              <ButtonDot\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                onClick={(e) => this.setState({ anchor: e.currentTarget })}\n              >\n                <Dropbtn>\n                  <HiOutlineDotsCircleHorizontal />\n                </Dropbtn>\n              </ButtonDot>\n              <StyledMenuDot\n                id=\"customized-menu\"\n                anchorEl={this.state.anchor}\n                keepMounted\n                open={Boolean(this.state.anchor)}\n                onClose={() => this.setState({ anchor: null })}\n              >\n                {this.props.task.displayTask.length !== 0 ? (\n                  <StyledMenuItemDot\n                    onClick={() => {\n                      this.editClicked();\n                      this.setState({ anchor: null });\n                    }}\n                  >\n                    <ListItemText primary=\"Edit \" />\n                    <ListItemIcon>\n                      <EditIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                  </StyledMenuItemDot>\n                ) : (\n                  <div />\n                )}\n\n                <StyledMenuItemDot\n                  onClick={() => {\n                    this.setState({ anchor: null });\n                    this.props.deleteList(\n                      this.props.token,\n                      this.props.userClicked\n                    );\n                    this.routeChange(`/todolist`);\n                  }}\n                >\n                  <ListItemText primary=\"Delete List \" />\n                  <ListItemIcon>\n                    <DeleteIcon fontSize=\"small\" />\n                  </ListItemIcon>\n                </StyledMenuItemDot>\n              </StyledMenuDot>\n            </MenuBox>\n          </BackTitleContain>\n          <ListName>{this.props.task.label}</ListName>\n          <TaskList>\n            {this.props.task.displayTask.map((task) => {\n              if (task.status === \"false\")\n                return (\n                  <Tasks\n                    key={uuid()}\n                    id={task._id}\n                    date={task.date}\n                    title={task.title}\n                    description={task.description}\n                    status={task.status}\n                    history={this.props.history}\n                  />\n                );\n            })}\n\n            {this.props.task.displayTask.map((task) => {\n              if (task.status === \"true\")\n                return (\n                  <Tasks\n                    key={uuid()}\n                    id={task._id}\n                    date={task.date}\n                    title={task.title}\n                    description={task.description}\n                    status={task.status}\n                    history={this.props.history}\n                  />\n                );\n            })}\n          </TaskList>\n\n          <ContainBtn>\n            <AddandREM>\n              <RemIcon>\n                <IoMdAddCircle />\n              </RemIcon>\n              <AddRem onClick={() => this.routeChange(`/addrem`)}>\n                New Reminder\n              </AddRem>\n            </AddandREM>\n          </ContainBtn>\n        </BodyStyle>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ListData: state.task.taskList,\n    userClicked: state.task.clickedListId,\n    edit: state.user.editTask,\n    task: state.task.clickedTaskList,\n    token: state.auth.token,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  editClickDot,\n  loadTaskList,\n  getData,\n  deleteList,\n  handleUnClicked,\n})(DisplayTasks);\n","/home/ihtisham/PycharmProjects/test/client/src/components/Tasks.jsx",["164","165","166"],"/home/ihtisham/PycharmProjects/test/client/src/components/CheckBox.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/header.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/SearchResult.jsx",["167"],"import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchItem from \"./SearchItem\";\nimport { v4 as uuid } from \"uuid\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: transparent;\n  z-index: 100;\n`;\nconst Body = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 16vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 70.5vh;\n  background: #111;\n  margin: 20vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\n\nexport class SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalRef: createRef(),\n    };\n  }\n\n  closeModal(e) {\n    if (this.state.modalRef.current === e.target) {\n      this.props.onClose();\n    }\n  }\n  render() {\n    if (!this.props.open) return null;\n    return (\n      <Overlay ref={this.state.modalRef} onClick={(e) => this.closeModal(e)}>\n        <Body>\n          {this.props.searchText === \"\" ? (\n            <div />\n          ) : (\n            this.props.taskData.map((l) => {\n              return l.taskList.map((t) => {\n                if (t.title.includes(this.props.searchText)) {\n                  return (\n                    <SearchItem\n                      key={uuid()}\n                      listName={l.listName}\n                      taskName={t.title}\n                      status={t.status}\n                      list={l._id}\n                      taskId={t._id}\n                      description={t.description}\n                      date={t.date}\n                      history={this.props.history}\n                    />\n                  );\n                }\n              });\n            })\n          )}\n        </Body>\n      </Overlay>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps)(SearchResult);\n","/home/ihtisham/PycharmProjects/test/client/src/components/SearchItem.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/TodayTask.jsx",["168","169"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Header from \"./header\";\nimport { FaLessThan } from \"react-icons/fa\";\nimport Tasks from \"./Tasks\";\nimport { v4 as uuid } from \"uuid\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\nconst BodyStyle = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 2vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 77vh;\n  background: #111;\n  margin: 5vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\nconst ContainBtn = styled.div`\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n  margin-bottom: 1vh;\n`;\nconst AddRem = styled.div`\n  border: none;\n  background-color: transparent;\n  color: #2d62f3;\n  font-size: 1.5vh;\n  margin-left: 0.5vh;\n`;\nconst RemIcon = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 2vh;\n  border-radius: 4vh;\n  margin: 0;\n  color: #2d62f3;\n`;\n\nconst AddandREM = styled.div`\n  &:hover {\n    opacity: 0.7;\n  }\n  cursor: pointer;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n`;\nconst BackTitleContain = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 0.5vh;\n  width: 100%;\n`;\nconst ContainBackList = styled.div`\n  display: flex;\n  cursor: pointer;\n  margin: auto auto 0 0.5vh;\n  align-items: center;\n`;\nconst BackBTN = styled.div`\n  color: #4271f1;\n  margin-top: 0.4vh;\n  margin-right: 0.8vh;\n  font-size: 2vh;\n`;\nconst ListTitle = styled.h3`\n  color: #2d62f3;\n  font-size: 2.2vh;\n`;\nconst ListName = styled.h1`\n  margin: 0 0 0 1.5vh;\n  color: #2d62f3;\n  font-size: 4.5vh;\n`;\nconst TaskList = styled.div`\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  display: flex;\n  flex-direction: column;\n  margin: 2vh 0 0 0.2vh;\n  padding: 0.3vh;\n  overflow: scroll;\n  scrollbar-width: none;\n`;\n\nexport class TodayTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TodayDate: getCurrentDate(),\n    };\n  }\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <BodyStyle>\n          <BackTitleContain>\n            <ContainBackList\n              onClick={() => {\n                this.routeChange(`/todolist`);\n              }}\n            >\n              <BackBTN>\n                <FaLessThan />\n              </BackBTN>\n              <ListTitle>Lists</ListTitle>\n            </ContainBackList>\n          </BackTitleContain>\n          <ListName>Todays</ListName>\n          <TaskList>\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (\n                  this.state.TodayDate.getDate() === dts.getDate() &&\n                  this.state.TodayDate.getMonth() === dts.getMonth() &&\n                  this.state.TodayDate.getFullYear() === dts.getFullYear()\n                ) {\n                  if (t.status === \"false\")\n                    return (\n                      <Tasks\n                        key={uuid()}\n                        id={t._id}\n                        date={t.date}\n                        title={t.title}\n                        description={l.listName}\n                        status={t.status}\n                        list={l._id}\n                      />\n                    );\n                }\n              });\n            })}\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (\n                  this.state.TodayDate.getDate() === dts.getDate() &&\n                  this.state.TodayDate.getMonth() === dts.getMonth() &&\n                  this.state.TodayDate.getFullYear() === dts.getFullYear()\n                ) {\n                  if (t.status === \"true\")\n                    return (\n                      <Tasks\n                        key={uuid()}\n                        id={t._id}\n                        date={t.date}\n                        title={t.title}\n                        description={l.listName}\n                        status={t.status}\n                        list={l._id}\n                      />\n                    );\n                }\n              });\n            })}\n          </TaskList>\n\n          <ContainBtn>\n            <AddandREM>\n              <RemIcon>\n                <IoMdAddCircle />\n              </RemIcon>\n              <AddRem onClick={() => this.routeChange(`/addrem`)}>\n                New Reminder\n              </AddRem>\n            </AddandREM>\n          </ContainBtn>\n        </BodyStyle>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    displayTask: state.task.taskList,\n  };\n}\n\nexport default connect(mapStateToProps)(TodayTask);\n","/home/ihtisham/PycharmProjects/test/client/src/components/ScheduledTask.jsx",["170"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Header from \"./header\";\nimport { FaLessThan } from \"react-icons/fa\";\nimport Tasks from \"./Tasks\";\nimport { v4 as uuid } from \"uuid\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\nconst BodyStyle = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 2vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 77vh;\n  background: #111;\n  margin: 5vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\nconst ContainBtn = styled.div`\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n  margin-bottom: 1vh;\n`;\nconst AddRem = styled.div`\n  border: none;\n  background-color: transparent;\n  color: #cf2727;\n  font-size: 1.5vh;\n  margin-left: 0.5vh;\n`;\nconst RemIcon = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 2vh;\n  border-radius: 4vh;\n  margin: 0;\n  color: #cf2727;\n`;\n\nconst AddandREM = styled.div`\n  &:hover {\n    opacity: 0.7;\n  }\n  cursor: pointer;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n`;\nconst BackTitleContain = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 0.5vh;\n  width: 100%;\n`;\nconst ContainBackList = styled.div`\n  display: flex;\n  cursor: pointer;\n  margin: auto auto 0 0.5vh;\n  align-items: center;\n`;\n\nconst BackBTN = styled.div`\n  color: #cf2727;\n  margin-top: 0.4vh;\n  margin-right: 0.8vh;\n  font-size: 2vh;\n`;\nconst ListTitle = styled.h3`\n  color: #cf2727;\n  font-size: 2.2vh;\n`;\nconst ListName = styled.h1`\n  margin: 0 0 0 1.5vh;\n  color: #cf2727;\n  font-size: 4.5vh;\n`;\nconst TaskList = styled.div`\n    &::-webkit-scrollbar {\n    display: none;\n  }\n  display: flex;\n  flex-direction: column;\n  margin: 2vh 0 0 0.2vh;\n  padding: 0.3vh;\n  overflow: scroll;\n  scrollbar-width: none;\n`;\nexport class ScheduledTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TodayDate: getCurrentDate(),\n    };\n  }\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <BodyStyle>\n          <BackTitleContain>\n            <ContainBackList\n              onClick={() => {\n                this.routeChange(`/todolist`);\n              }}\n            >\n              <BackBTN>\n                <FaLessThan />\n              </BackBTN>\n              <ListTitle>Lists</ListTitle>\n            </ContainBackList>\n          </BackTitleContain>\n          <ListName>Scheduled</ListName>\n          <TaskList>\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (this.state.TodayDate.getFullYear() <= dts.getFullYear()) {\n                  if (this.state.TodayDate.getMonth() <= dts.getMonth()) {\n                    if (this.state.TodayDate.getDate() < dts.getDate()) {\n                      return (\n                        <Tasks\n                          key={uuid()}\n                          id={t._id}\n                          date={t.date}\n                          title={t.title}\n                          description={l.listName}\n                          status={t.status}\n                        />\n                      );\n                    }\n                  }\n                }\n              });\n            })}\n          </TaskList>\n\n          <ContainBtn>\n            <AddandREM>\n              <RemIcon>\n                <IoMdAddCircle />\n              </RemIcon>\n              <AddRem onClick={() => this.routeChange(`/addrem`)}>\n                New Reminder\n              </AddRem>\n            </AddandREM>\n          </ContainBtn>\n        </BodyStyle>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    displayTask: state.task.taskList,\n  };\n}\n\nexport default connect(mapStateToProps)(ScheduledTask);\n","/home/ihtisham/PycharmProjects/test/client/src/components/EditTask.jsx",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":13},{"ruleId":"175","severity":1,"message":"179","line":19,"column":11,"nodeType":"177","messageId":"178","endLine":19,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":49,"column":11,"nodeType":"177","messageId":"178","endLine":49,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":45,"column":11,"nodeType":"177","messageId":"178","endLine":45,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":138,"column":11,"nodeType":"177","messageId":"178","endLine":138,"endColumn":14},{"ruleId":"180","severity":1,"message":"181","line":156,"column":23,"nodeType":"182","messageId":"183","endLine":156,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":174,"column":23,"nodeType":"182","messageId":"183","endLine":174,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":196,"column":31,"nodeType":"182","messageId":"183","endLine":196,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":210,"column":31,"nodeType":"182","messageId":"183","endLine":210,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":5,"column":1,"nodeType":"186","endLine":19,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":15,"column":1,"nodeType":"186","endLine":47,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":10,"column":1,"nodeType":"186","endLine":55,"endColumn":2},{"ruleId":"175","severity":1,"message":"187","line":11,"column":17,"nodeType":"177","messageId":"178","endLine":11,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":10,"column":1,"nodeType":"186","endLine":162,"endColumn":2},{"ruleId":"180","severity":1,"message":"188","line":269,"column":53,"nodeType":"182","messageId":"189","endLine":269,"endColumn":55},{"ruleId":"180","severity":1,"message":"188","line":284,"column":53,"nodeType":"182","messageId":"189","endLine":284,"endColumn":55},{"ruleId":"175","severity":1,"message":"190","line":8,"column":27,"nodeType":"177","messageId":"178","endLine":8,"endColumn":33},{"ruleId":"175","severity":1,"message":"191","line":8,"column":35,"nodeType":"177","messageId":"178","endLine":8,"endColumn":40},{"ruleId":"175","severity":1,"message":"192","line":8,"column":42,"nodeType":"177","messageId":"178","endLine":8,"endColumn":48},{"ruleId":"180","severity":1,"message":"188","line":54,"column":41,"nodeType":"182","messageId":"189","endLine":54,"endColumn":43},{"ruleId":"180","severity":1,"message":"188","line":126,"column":41,"nodeType":"182","messageId":"189","endLine":126,"endColumn":43},{"ruleId":"180","severity":1,"message":"188","line":149,"column":41,"nodeType":"182","messageId":"189","endLine":149,"endColumn":43},{"ruleId":"180","severity":1,"message":"188","line":126,"column":41,"nodeType":"182","messageId":"189","endLine":126,"endColumn":43},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'payload' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]